{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/get-data.service.ts","webpack:///src/app/shop-area/shop-area.component.ts","webpack:///src/app/shop-area/shop-area.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","GetDataService","http","url","get","providedIn","alt","ShopAreaComponent","getData","newCurrency","productList","convertCurrency","subscribe","data","Object","rates","console","log","values","index","conversion","map","x","price","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'shopList';\n}\n","\n<app-shop-area></app-shop-area>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ShopAreaComponent } from './shop-area/shop-area.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { GetDataService } from './get-data.service'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ShopAreaComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n  ],\n  providers: [GetDataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport {  HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetDataService {\n\n  url= \"https://api.exchangeratesapi.io/latest?base=INR\";\n\n  constructor(private http:HttpClient) { }\n\n  convertCurrency(){\n    return this.http.get(this.url)\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport data from 'src/app/data/data.json'\nimport { GetDataService } from '../get-data.service';\nimport {  HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-shop-area',\n  templateUrl: './shop-area.component.html',\n  styleUrls: ['./shop-area.component.scss']\n})\nexport class ShopAreaComponent implements OnInit {\n\n  \n  conversion:number;\n  keys;\n  values;\n  newCurrency = 'INR';\n  public productList:{img:any, alt:string, title:string, price:number}[]= data;\n  \n\n  constructor(private getData:GetDataService,\n    private http:HttpClient) { }\n\n  ngOnInit(){\n    this.getData.convertCurrency()\n    .subscribe((data: any)=>{\n      this.keys = Object.keys(data.rates);\n      console.log(this.keys);\n      this.values = Object.values(data.rates) \n    })\n}\n  changeCurrency(index){\n      this.conversion = this.values[index]\n      this.newCurrency = this.keys[index]\n      console.log(typeof(this.conversion))\n      console.log(this.conversion) \n      this.productList = data\n      this.productList = this.productList.map(x=>{\n        return {...x,price:this.conversion*x.price}\n      })\n  }\n\n}\n","<nav class=\"navbar navbar-light bg-light\">\n    <a class=\"navbar-brand\">Covid-19 ShopSpring</a>\n    <div class=\"dropdown\">\n        <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n          Currency\n        </button>\n        <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\" >\n            <a class=\"dropdown-item\" *ngFor=\"let code of keys; let i = index\" (click)=\"changeCurrency(i)\">{{code}}</a>\n        </div>\n    </div>\n</nav>\n\n<div class=\"card-container\" *ngFor=\"let product of productList\">\n    <div class=\"card\" style=\"width: 18rem;\">\n        <img src=\"{{product.img}}\" class=\"card-img-top\" alt=\"{{product.alt}}\">\n        <div class=\"card-body\">\n            <h5 class=\"card-title\">{{product.title}}</h5>\n            <p class=\"card-text\">{{product.price | currency: newCurrency}}</p>\n        </div>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}